{
  "users": [
    {
      "id": 1,
      "username": "admin",
      "password": 123456,
      "roleState": true,
      "default": true,
      "region": "",
      "roleId": 1
    },
    {
      "username": "铁锤",
      "password": "123",
      "roleState": true,
      "default": false,
      "region": "亚洲",
      "roleId": 2,
      "id": 2,
      "role": {
        "id": 3,
        "roleName": "区域编辑",
        "roleType": 3,
        "rights": [
          "/home",
          "/news-manage",
          "/news-manage/list",
          "/news-manage/add",
          "/news-manage/update/:id",
          "/news-manage/preview/:id",
          "/news-manage/draft",
          "/audit-manage",
          "/audit-manage/list",
          "/publish-manage",
          "/publish-manage/unpublished",
          "/publish-manage/published",
          "/publish-manage/sunset"
        ]
      },
      "roleName": "区域编辑"
    },
    {
      "username": "钢蛋",
      "password": "123",
      "roleState": true,
      "default": false,
      "region": "南极洲",
      "roleId": 2,
      "id": 3
    },
    {
      "username": "诸葛山珍",
      "password": "123",
      "roleState": true,
      "default": false,
      "region": "",
      "roleId": 1,
      "id": 4
    },
    {
      "username": "西门吹灯",
      "password": "123",
      "roleState": true,
      "default": false,
      "region": "南极洲",
      "roleId": 3,
      "id": 5
    },
    {
      "username": "轩辕翠花",
      "password": "123",
      "roleState": true,
      "default": false,
      "region": "南极洲",
      "roleId": 3,
      "id": 6
    },
    {
      "username": "司马海味",
      "password": "123",
      "roleState": true,
      "default": false,
      "region": "亚洲",
      "roleId": 3,
      "id": 7,
      "role": {
        "id": 3,
        "roleName": "区域编辑",
        "roleType": 3,
        "rights": [
          "/home",
          "/news-manage",
          "/news-manage/list",
          "/news-manage/add",
          "/news-manage/update/:id",
          "/news-manage/preview/:id",
          "/news-manage/draft",
          "/audit-manage",
          "/audit-manage/list",
          "/publish-manage",
          "/publish-manage/unpublished",
          "/publish-manage/published",
          "/publish-manage/sunset"
        ]
      },
      "roleName": "区域编辑"
    },
    {
      "username": "咕噜墩子",
      "password": "123",
      "roleState": true,
      "default": false,
      "region": "亚洲",
      "roleId": 3,
      "id": 8,
      "role": {
        "id": 3,
        "roleName": "区域编辑",
        "roleType": 3,
        "rights": [
          "/home",
          "/news-manage",
          "/news-manage/list",
          "/news-manage/add",
          "/news-manage/update/:id",
          "/news-manage/preview/:id",
          "/news-manage/draft",
          "/audit-manage",
          "/audit-manage/list",
          "/publish-manage",
          "/publish-manage/unpublished",
          "/publish-manage/published",
          "/publish-manage/sunset"
        ]
      },
      "roleName": "区域编辑"
    },
    {
      "username": "dingyi",
      "password": "123456",
      "roleId": 2,
      "region": "南极洲",
      "roleState": true,
      "default": false,
      "id": 9,
      "role": {
        "id": 2,
        "roleName": "区域管理员",
        "roleType": 2,
        "rights": [
          "/home",
          "/user-manage",
          "/user-manage/add",
          "/user-manage/delete",
          "/user-manage/update",
          "/user-manage/list",
          "/right-manage",
          "/right-manage/role/list",
          "/right-manage/right/list",
          "/right-manage/role/update",
          "/right-manage/role/delete",
          "/right-manage/right/update",
          "/right-manage/right/delete",
          "/news-manage",
          "/news-manage/list",
          "/news-manage/add",
          "/news-manage/update/:id",
          "/news-manage/preview/:id",
          "/news-manage/draft",
          "/news-manage/category",
          "/audit-manage/list"
        ]
      },
      "roleName": "区域管理员"
    },
    {
      "username": "dingyixxx333",
      "password": "1234567333",
      "roleId": 1,
      "region": "",
      "roleState": true,
      "default": false,
      "id": 10,
      "role": {
        "id": 2,
        "roleName": "区域管理员",
        "roleType": 2,
        "rights": [
          "/home",
          "/user-manage",
          "/user-manage/add",
          "/user-manage/delete",
          "/user-manage/update",
          "/user-manage/list",
          "/news-manage",
          "/news-manage/list",
          "/news-manage/add",
          "/news-manage/update/:id",
          "/news-manage/preview/:id",
          "/news-manage/draft",
          "/news-manage/category",
          "/audit-manage",
          "/audit-manage/audit",
          "/audit-manage/list",
          "/publish-manage",
          "/publish-manage/unpublished",
          "/publish-manage/published",
          "/publish-manage/sunset"
        ]
      },
      "roleName": "区域管理员"
    }
  ],
  "roles": [
    {
      "id": 1,
      "roleName": "超级管理员",
      "roleType": 1,
      "rights": [
        "/user-manage",
        "/user-manage/add",
        "/user-manage/delete",
        "/user-manage/update",
        "/user-manage/list",
        "/right-manage",
        "/right-manage/role/list",
        "/right-manage/right/list",
        "/right-manage/role/update",
        "/right-manage/role/delete",
        "/right-manage/right/update",
        "/right-manage/right/delete",
        "/news-manage",
        "/news-manage/list",
        "/news-manage/add",
        "/news-manage/update/:id",
        "/news-manage/preview/:id",
        "/news-manage/draft",
        "/news-manage/category",
        "/audit-manage",
        "/audit-manage/audit",
        "/audit-manage/list",
        "/publish-manage",
        "/publish-manage/unpublished",
        "/publish-manage/published",
        "/publish-manage/sunset",
        "/home"
      ]
    },
    {
      "id": 2,
      "roleName": "区域管理员",
      "roleType": 2,
      "rights": [
        "/home",
        "/user-manage",
        "/user-manage/add",
        "/user-manage/delete",
        "/user-manage/update",
        "/user-manage/list",
        "/right-manage",
        "/right-manage/role/list",
        "/right-manage/right/list",
        "/right-manage/role/update",
        "/right-manage/role/delete",
        "/right-manage/right/update",
        "/right-manage/right/delete",
        "/news-manage",
        "/news-manage/list",
        "/news-manage/add",
        "/news-manage/update/:id",
        "/news-manage/preview/:id",
        "/news-manage/draft",
        "/news-manage/category",
        "/audit-manage/list",
        "/audit-manage/audit",
        "/audit-manage"
      ]
    },
    {
      "id": 3,
      "roleName": "区域编辑",
      "roleType": 3,
      "rights": [
        "/home",
        "/news-manage",
        "/news-manage/list",
        "/news-manage/add",
        "/news-manage/update/:id",
        "/news-manage/preview/:id",
        "/news-manage/draft",
        "/audit-manage",
        "/audit-manage/list",
        "/publish-manage",
        "/publish-manage/unpublished",
        "/publish-manage/published",
        "/publish-manage/sunset"
      ]
    }
  ],
  "children": [
    {
      "id": 3,
      "title": "添加用户",
      "rightId": 2,
      "key": "/user-manage/add",
      "grade": 2
    },
    {
      "id": 4,
      "title": "删除用户",
      "rightId": 2,
      "key": "/user-manage/delete",
      "grade": 2
    },
    {
      "id": 5,
      "title": "修改用户",
      "rightId": 2,
      "key": "/user-manage/update",
      "grade": 2
    },
    {
      "id": 6,
      "title": "用户列表",
      "rightId": 2,
      "key": "/user-manage/list",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 8,
      "title": "角色列表",
      "rightId": 7,
      "key": "/right-manage/role/list",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 9,
      "title": "权限列表",
      "rightId": 7,
      "key": "/right-manage/right/list",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 10,
      "title": "修改角色",
      "rightId": 7,
      "key": "/right-manage/role/update",
      "grade": 2
    },
    {
      "id": 11,
      "title": "删除角色",
      "rightId": 7,
      "key": "/right-manage/role/delete",
      "grade": 2
    },
    {
      "id": 12,
      "title": "修改权限",
      "rightId": 7,
      "key": "/right-manage/right/update",
      "grade": 2
    },
    {
      "id": 13,
      "title": "删除权限",
      "rightId": 7,
      "key": "/right-manage/right/delete",
      "grade": 2
    },
    {
      "id": 15,
      "title": "新闻列表",
      "rightId": 14,
      "key": "/news-manage/list",
      "grade": 2,
      "pagepermisson": 1
    },
    {
      "id": 16,
      "title": "撰写新闻",
      "rightId": 14,
      "key": "/news-manage/add",
      "grade": 2,
      "pagepermisson": 1
    },
    {
      "id": 17,
      "title": "新闻更新",
      "rightId": 14,
      "key": "/news-manage/update/:id",
      "grade": 2,
      "routepermisson": 1
    },
    {
      "id": 18,
      "title": "新闻预览",
      "rightId": 14,
      "key": "/news-manage/preview/:id",
      "grade": 2,
      "routepermisson": 1
    },
    {
      "id": 19,
      "title": "草稿箱",
      "rightId": 14,
      "key": "/news-manage/draft",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 20,
      "title": "新闻分类",
      "rightId": 14,
      "key": "/news-manage/category",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 22,
      "title": "审核新闻",
      "rightId": 21,
      "key": "/audit-manage/audit",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 23,
      "title": "审核列表",
      "rightId": 21,
      "key": "/audit-manage/list",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 25,
      "title": "待发布",
      "rightId": 24,
      "key": "/publish-manage/unpublished",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 26,
      "title": "已发布",
      "rightId": 24,
      "key": "/publish-manage/published",
      "pagepermisson": 1,
      "grade": 2
    },
    {
      "id": 27,
      "title": "已下线",
      "rightId": 24,
      "key": "/publish-manage/sunset",
      "pagepermisson": 1,
      "grade": 2
    }
  ],
  "rights": [
    {
      "id": 1,
      "title": "首页",
      "key": "/home",
      "pagepermisson": 1,
      "grade": 1
    },
    {
      "id": 2,
      "title": "用户管理",
      "key": "/user-manage",
      "pagepermisson": 1,
      "grade": 1
    },
    {
      "id": 7,
      "title": "权限管理",
      "key": "/right-manage",
      "pagepermisson": 1,
      "grade": 1
    },
    {
      "id": 14,
      "title": "新闻管理",
      "key": "/news-manage",
      "pagepermisson": 1,
      "grade": 1
    },
    {
      "id": 21,
      "title": "审核管理",
      "key": "/audit-manage",
      "pagepermisson": 1,
      "grade": 1
    },
    {
      "id": 24,
      "title": "发布管理",
      "key": "/publish-manage",
      "pagepermisson": 1,
      "grade": 1
    }
  ],
  "categories": [
    {
      "id": 1,
      "title": "时事新闻",
      "value": "时事新闻"
    },
    {
      "id": 2,
      "title": "环球经济",
      "value": "环球经济"
    },
    {
      "id": 3,
      "title": "科学技术",
      "value": "科学技术"
    },
    {
      "id": 4,
      "title": "军事世界",
      "value": "军事世界"
    },
    {
      "id": 5,
      "title": "世界体育",
      "value": "世界体育"
    },
    {
      "id": 6,
      "title": "生活理财",
      "value": "生活理财"
    }
  ],
  "regions": [
    {
      "id": 1,
      "title": "亚洲",
      "value": "亚洲"
    },
    {
      "id": 2,
      "title": "欧洲",
      "value": "欧洲"
    },
    {
      "id": 3,
      "title": "北美洲",
      "value": "北美洲"
    },
    {
      "id": 4,
      "title": "南美洲",
      "value": "南美洲"
    },
    {
      "id": 5,
      "title": "非洲",
      "value": "非洲"
    },
    {
      "id": 6,
      "title": "大洋洲",
      "value": "大洋洲"
    },
    {
      "id": 7,
      "title": "南极洲",
      "value": "南极洲"
    }
  ],
  "news": [
    {
      "title": "千锋教育",
      "categoryId": 3,
      "content": "<p style=\"text-align:start;\"></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">      看到有同学在问大连的</span><a href=\"http://www.mobiletrain.org/\" target=\"_blank\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">千锋教育</span></a><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">校址在哪里，这里小千就来给大家介绍一下千锋教育和校区地址，给大家参考一下。</span></p>\n<p style=\"text-align:center;\"></p>\n<img src=\"http://upload.mobiletrain.org/2020/1218/1608271193504.jpg\" alt=\"u=313055993,4178527216&fm=26&gp=0\" style=\"height: ;width: \"/>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\"><strong>千锋教育大连校区地址</strong></span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">      首先先给大家介绍一下千锋教育的大连校区地址，坐落在：辽宁省大连市高新园区爱贤街10号大连设计城A座901，联系和咨询电话可以拨打 400-811-9990，会有专人负责接待同学。</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\"><strong>千锋教育</strong></span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">      再给大家简单介绍一下千锋教育，千锋教育是北京千锋互联科技有限公司旗下的品牌，开设了12大热门课程，并且每月都会更新最新的前沿技术。</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">      千锋教育一直秉持着“用良心做教育”的理念，在全国拥有上百家的合作高校，更是有超过20000家的合作企业。</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">      千锋教育总部设立在北京，目前在目前已在深圳、上海、郑州、广州、大连、武汉、成都、西安、杭州、青岛、重庆、长沙、哈尔滨、南京、太原建立分公司。</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">      千锋教育开设HTML5前端、Java、Python、全链路设计、云计算、软件测试、大数据、智能物联网、Unity游戏开发、Go语言开发、网络安全、互联网营销学科，并推出软考、Adobe认证、PMP认证、</span><a href=\"http://www.mobiletrain.org/topic/redhat/\" target=\"_blank\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">红帽RHCE认证</span></a><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">课程</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgb(255,255,255);font-size: 14px;font-family: 微软雅黑, \"PingFang SC;\">      最后欢迎大家来到千锋教育大连校区了解我们的培训课程，全程名师面授确保课程品质，还享受2周的免费试听不满意不缴费随时退学即可，赶紧来了解一下吧~~~~</span></p>\n<p style=\"text-align:start;\"><br>&nbsp;</p>\n",
      "region": "全球",
      "author": "admin",
      "roleId": 1,
      "auditState": 0,
      "publishState": 2,
      "createTime": 1615777743864,
      "star": 1000,
      "view": 2005,
      "id": 1,
      "publishTime": 1615778496314
    },
    {
      "title": "Hello World",
      "categoryId": 1,
      "content": "<p style=\"text-align:start;\"></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Click the link above to open an online editor. Feel free to make some changes, and see how they affect the output. Most pages in this guide will have editable examples like this one.</span></p>\n<h2 style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">How to Read This Guide</span></h2>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">In this guide, we will examine the building blocks of React apps: elements and components. Once you master them, you can create complex apps from small reusable pieces.</span></p>\n<blockquote style=\"margin-left:-30px;\"></blockquote>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Tip</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">This guide is designed for people who prefer</span> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><strong>learning concepts step by step</strong>. If you prefer to learn by doing, check out our</span> <a href=\"https://reactjs.org/tutorial/tutorial.html\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">practical tutorial</span></a><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">. You might find this guide and the tutorial complementary to each other.</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">This is the first chapter in a step-by-step guide about main React concepts. You can find a list of all its chapters in the navigation sidebar. If you’re reading this from a mobile device, you can access the navigation by pressing the button in the bottom right corner of your screen.</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Every chapter in this guide builds on the knowledge introduced in earlier chapters.</span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><strong>You can learn most of React by reading the “Main Concepts” guide chapters in the order they appear in the sidebar.</strong></span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">For example,</span> <a href=\"https://reactjs.org/docs/introducing-jsx.html\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">“Introducing JSX”</span></a> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">is the next chapter after this one.</span></p>\n<h2 style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Knowledge Level Assumptions</span></h2>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React is a JavaScript library, and so we’ll assume you have a basic understanding of the JavaScript language.</span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><strong>If you don’t feel very confident, we recommend</strong></span> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript\" target=\"_blank\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><strong>going through a JavaScript tutorial</strong></span></a> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><strong>to check your knowledge level</strong></span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">and enable you to follow along this guide without getting lost. It might take you between 30 minutes and an hour, but as a result you won’t have to feel like you’re learning both React and JavaScript at the same time.</span></p>\n<blockquote style=\"margin-left:-30px;\"></blockquote>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Note</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">This guide occasionally uses some of the newer JavaScript syntax in the examples. If you haven’t worked with JavaScript in the last few years,</span> <a href=\"https://gist.github.com/gaearon/683e676101005de0add59e8bb345340c\" target=\"_blank\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">these three points</span></a> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">should get you most of the way.</span></p>\n<h2 style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Let’s Get Started!</span></h2>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Keep scrolling down, and you’ll find the link to the</span> <a href=\"https://reactjs.org/docs/introducing-jsx.html\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">next chapter of this guide</span></a> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">right before the website footer.</span><br>&nbsp;</p>\n",
      "region": "全球",
      "author": "admin",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1615778694831,
      "star": 500,
      "view": 804,
      "id": 2,
      "publishTime": 1615778911028
    },
    {
      "title": "Introducing JSX",
      "categoryId": 2,
      "content": "<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">This funny tag syntax is neither a string nor HTML.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">It is called JSX, and it is a syntax extension to JavaScript. We recommend using it with React to describe what the UI should look like. JSX may remind you of a template language, but it comes with the full power of JavaScript.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">JSX produces React “elements”. We will explore rendering them to the DOM in the</span> <a href=\"https://reactjs.org/docs/rendering-elements.html\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">next section</span></a><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">. Below, you can find the basics of JSX necessary to get you started.</span></p>\n<h3 style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Why JSX?</span></h3>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React embraces the fact that rendering logic is inherently coupled with other UI logic: how events are handled, how the state changes over time, and how the data is prepared for display.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Instead of artificially separating</span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><em>technologies</em></span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">by putting markup and logic in separate files, React</span> <a href=\"https://en.wikipedia.org/wiki/Separation_of_concerns\" target=\"_blank\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">separates</span> <span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><em>concerns</em></span></a> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">with loosely coupled units called “components” that contain both. We will come back to components in a</span> <a href=\"https://reactjs.org/docs/components-and-props.html\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">further section</span></a><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">, but if you’re not yet comfortable putting markup in JS,</span> <a href=\"https://www.youtube.com/watch?v=x7cQ3mrcKaY\" target=\"_blank\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">this talk</span></a> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">might convince you otherwise.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React</span> <a href=\"https://reactjs.org/docs/react-without-jsx.html\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">doesn’t require</span></a> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">using JSX, but most people find it helpful as a visual aid when working with UI inside the JavaScript code. It also allows React to show more useful error and warning messages.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">With that out of the way, let’s get started!</span></p>\n<h3 style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Embedding Expressions in JSX</span></h3>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">In the example below, we declare a variable called</span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>name</code></span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">and then use it inside JSX by wrapping it in curly braces:</span></p>\n<p style=\"text-align:start;\"></p>\n<pre style=\"margin-left:1rem;\"><br>&nbsp;</pre>\n",
      "region": "全球",
      "author": "admin",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1615778715619,
      "star": 600,
      "view": 983,
      "id": 3,
      "publishTime": 1615778911762
    },
    {
      "title": "Rendering Elements",
      "categoryId": 3,
      "content": "<p style=\"text-align:start;\"></p>\n<h2 style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React Only Updates What’s Necessary</span></h2>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React DOM compares the element and its children to the previous one, and only applies the DOM updates necessary to bring the DOM to the desired state.</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">You can verify by inspecting the</span> <a href=\"https://reactjs.org/redirect-to-codepen/rendering-elements/update-rendered-element\" target=\"_blank\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">last example</span></a> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">with the browser tools:</span></p>\n<p style=\"margin-left:0px;\"></p>\n<img src=\"https://reactjs.org/c158617ed7cc0eac8f58330e49e48224/granular-dom-updates.gif\" alt=\"DOM inspector showing granular updates\" style=\"height: ;width: \"/>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Even though we create an element describing the whole UI tree on every tick, only the text node whose contents have changed gets updated by React DOM.</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">In our experience, thinking about how the UI should look at any given moment, rather than how to change it over time, eliminates a whole class of bugs.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(109,109,109);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Is this page useful?</span><a href=\"https://github.com/reactjs/reactjs.org/tree/master/content/docs/rendering-elements.md\" target=\"_self\"><span style=\"color: rgb(55,57,64);background-color: transparent;font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Edit this page</span></a>&nbsp;</p>\n",
      "region": "全球",
      "author": "admin",
      "roleId": 1,
      "auditState": 2,
      "publishState": 3,
      "createTime": 1615778740202,
      "star": 800,
      "view": 869,
      "id": 4,
      "publishTime": 1615778912481
    },
    {
      "title": "Components and Props",
      "categoryId": 4,
      "content": "<p style=\"text-align:start;\"><span style=\"color: rgb(109,109,109);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Components let you split the UI into independent, reusable pieces, and think about each piece in isolation. This page provides an introduction to the idea of components. You can find a</span> <a href=\"https://reactjs.org/docs/react-component.html\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">detailed component API reference here</span></a><span style=\"color: rgb(109,109,109);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Conceptually, components are like JavaScript functions. They accept arbitrary inputs (called “props”) and return React elements describing what should appear on the screen.</span></p>\n<h2 style=\"text-align:start;\"><br> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Let’s recap what happens in this example:</span></h2>\n<ol>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">We call</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>ReactDOM.render()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">with the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;Welcome name=\"Sara\" /&gt;</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">element.</span></li>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React calls the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Welcome</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">component with</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>{name: 'Sara'}</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">as the props.</span></li>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Our</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Welcome</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">component returns a</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;h1&gt;Hello, Sara&lt;/h1&gt;</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">element as the result.</span></li>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React DOM efficiently updates the DOM to match</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;h1&gt;Hello, Sara&lt;/h1&gt;</code>.</span></li>\n</ol>\n<blockquote style=\"text-align:start;\"></blockquote>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><strong>Note:</strong></span> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Always start component names with a capital letter.</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React treats components starting with lowercase letters as DOM tags. For example,</span> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;div /&gt;</code></span> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">represents an HTML div tag, but</span> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;Welcome /&gt;</code></span> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">represents a component and requires</span> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Welcome</code></span> <span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">to be in scope.</span></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">To learn more about the reasoning behind this convention, please read</span> <a href=\"https://reactjs.org/docs/jsx-in-depth.html#user-defined-components-must-be-capitalized\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">JSX In Depth</span></a><span style=\"color: rgb(0,0,0);background-color: rgba(255,229,100,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">.</span></p>\n<h2 style=\"text-align:start;\"><br>&nbsp;</h2>\n",
      "region": "全球",
      "author": "admin",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1615778777924,
      "star": 100,
      "view": 201,
      "id": 5,
      "publishTime": 1615778914498
    },
    {
      "title": "State and Lifecycle",
      "categoryId": 4,
      "content": "<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Now the clock ticks every second.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Let’s quickly recap what’s going on and the order in which the methods are called:</span></p>\n<ol>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">When</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;Clock /&gt;</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">is passed to</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>ReactDOM.render()</code>, React calls the constructor of the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Clock</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">component. Since</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Clock</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">needs to display the current time, it initializes</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>this.state</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">with an object including the current time. We will later update this state.</span></li>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React then calls the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Clock</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">component’s</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>render()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">method. This is how React learns what should be displayed on the screen. React then updates the DOM to match the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Clock</code>’s render output.</span></li>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">When the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Clock</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">output is inserted in the DOM, React calls the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>componentDidMount()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">lifecycle method. Inside it, the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Clock</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">component asks the browser to set up a timer to call the component’s</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>tick()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">method once a second.</span></li>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Every second the browser calls the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>tick()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">method. Inside it, the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Clock</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">component schedules a UI update by calling</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>setState()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">with an object containing the current time. Thanks to the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>setState()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">call, React knows the state has changed, and calls the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>render()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">method again to learn what should be on the screen. This time,</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>this.state.date</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">in the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>render()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">method will be different, and so the render output will include the updated time. React updates the DOM accordingly.</span></li>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">If the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>Clock</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">component is ever removed from the DOM, React calls the</span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>componentWillUnmount()</code></span> <span style=\"color: rgb(26,26,26);font-size: medium;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">lifecycle method so the timer is stopped.</span></li>\n</ol>\n<h2 style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Using State Correctly</span></h2>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">There are three things you should know about</span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>setState()</code>.</span></p>\n<h3 style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Do Not Modify State Directly</span></h3>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">For example, this will not re-render a component:</span></p>\n<p style=\"text-align:start;\"><br>&nbsp;</p>\n",
      "region": "全球",
      "author": "admin",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1615778808893,
      "star": 300,
      "view": 454,
      "id": 6,
      "publishTime": 1615778916224
    },
    {
      "title": "Forms",
      "categoryId": 5,
      "content": "<h2 style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Controlled Components</span></h2>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">In HTML, form elements such as</span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;input&gt;</code>,</span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;textarea&gt;</code>, and</span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>&lt;select&gt;</code></span> <span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">typically maintain their own state and update it based on user input. In React, mutable state is typically kept in the state property of components, and only updated with</span> <a href=\"https://reactjs.org/docs/react-component.html#setstate\" target=\"_self\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code>setState()</code></span></a><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">We can combine the two by making the React state be the “single source of truth”. Then the React component that renders a form also controls what happens in that form on subsequent user input. An input form element whose value is controlled by React in this way is called a “controlled component”.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">For example, if we want to make the previous example log the name when it is submitted, we can write the form as a controlled component:</span></p>\n<p style=\"text-align:start;\"><br>&nbsp;</p>\n",
      "region": "全球",
      "author": "admin",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1615778852584,
      "star": 309,
      "view": 479,
      "id": 7,
      "publishTime": 1615778917074
    },
    {
      "title": "Thinking in React",
      "categoryId": 6,
      "content": "<p style=\"text-align:start;\"><span style=\"color: rgb(109,109,109);font-size: 18px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">React is, in our opinion, the premier way to build big, fast Web apps with JavaScript. It has scaled very well for us at Facebook and Instagram.</span></p>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">One of the many great parts of React is how it makes you think about apps as you build them. In this document, we’ll walk you through the thought process of building a searchable product data table using React.</span></p>\n<h2 style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Start With A Mock</span></h2>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Imagine that we already have a JSON API and a mock from our designer. The mock looks like this:</span></p>\n<p style=\"text-align:start;\"></p>\n<img src=\"https://reactjs.org/static/1071fbcc9eed01fddc115b41e193ec11/d4770/thinking-in-react-mock.png\" alt=\"Mockup\" style=\"height: 276.854px;width: 228px\"/>\n<p style=\"text-align:start;\"><span style=\"color: rgb(0,0,0);font-size: 17px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">Our JSON API returns some data that looks like this:</span></p>\n<p style=\"margin-left:0px;\"><br> <span style=\"font-size: 17px;\">The first thing you’ll want to do is to draw boxes around every component (and subcomponent) in the mock and give them all names. If you’re working with a designer, they may have already done this, so go talk to them! Their Photoshop layer names may end up being the names of your React components!</span></p>\n<p style=\"margin-left:0px;\"><span style=\"font-size: 17px;\">But how do you know what should be its own component? Use the same techniques for deciding if you should create a new function or object. One such technique is the</span> <a href=\"https://en.wikipedia.org/wiki/Single_responsibility_principle\" target=\"_blank\"><span style=\"color: rgb(26,26,26);background-color: rgba(187,239,253,0.3);font-size: 17px;\">single responsibility principle</span></a><span style=\"font-size: 17px;\">, that is, a component should ideally only do one thing. If it ends up growing, it should be decomposed into smaller subcomponents.</span></p>\n<p style=\"margin-left:0px;\"><span style=\"font-size: 17px;\">Since you’re often displaying a JSON data model to a user, you’ll find that if your model was built correctly, your UI (and therefore your component structure) will map nicely. That’s because UI and data models tend to adhere to the same</span> <span style=\"font-size: 17px;\"><em>information architecture</em>. Separate your UI into components, where each component matches one piece of your data model.</span></p>\n<p style=\"margin-left:0px;\"></p>\n<img src=\"https://reactjs.org/static/eb8bda25806a89ebdc838813bdfa3601/6b2ea/thinking-in-react-components.png\" alt=\"Component diagram\" style=\"height: 319.521px;width: 275px\"/>\n<p style=\"margin-left:0px;\"><span style=\"font-size: 17px;\">You’ll see here that we have five components in our app. We’ve italicized the data each component represents.</span></p>\n<ol>\n<li style=\"margin-left:0px;\"><span style=\"color: rgb(26,26,26);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><code><strong>FilterableProductTable</strong></code></span> <span style=\"color: rgb(26,26,26);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\"><strong>(orange):</strong></span> <span style=\"color: rgb(26,26,26);font-size: 16px;font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\">contains the entirety of the example</span><br>&nbsp;</li>\n</ol>\n",
      "region": "全球",
      "author": "admin",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1615778891518,
      "star": 781,
      "view": 889,
      "id": 8,
      "publishTime": 1615778917615
    },
    {
      "title": "测试草稿箱军事世界新闻标题",
      "categoryId": 4,
      "content": "<p>测试草稿箱军事世界新闻标题</p>\n",
      "roleId": 1,
      "author": "dingyixxx333",
      "region": "全球",
      "auditState": 2,
      "publishState": 3,
      "createTime": 1675504101494,
      "star": 0,
      "view": 0,
      "publishTime": 1675593560098,
      "id": 10
    },
    {
      "title": "测试提交审核生活理财",
      "categoryId": 6,
      "content": "<h2><span style=\"font-size: 30px;\"><strong><em>测试提交审核生活理财dkjakdsja</em></strong></span></h2>\n<p></p>\n<p style=\"text-align:right;\"><span style=\"color: rgb(97,189,109);\">测试提交审核生活理财</span></p>\n<p style=\"text-align:right;\"></p>\n<p style=\"text-align:right;\"><span style=\"color: rgb(247,218,100);font-size: 30px;font-family: Times New Roman;\">测试提交审</span><span style=\"font-size: 30px;font-family: Times New Roman;\">核生活理财bb</span><span style=\"color: rgb(235,107,86);font-size: 30px;font-family: Times New Roman;\">kdabdk</span><span style=\"font-size: 30px;font-family: Times New Roman;\">abskdas</span></p>\n<p style=\"text-align:right;\"></p>\n<ol>\n<li><del>测试提交审核生活理财</del></li>\n</ol>\n<p></p>\n<ul>\n<li style=\"text-align:center;\">测试提交审核生活理财</li>\n</ul>\n<p>测试提交审核生活理财😀</p>\n",
      "region": "全球",
      "auditState": 2,
      "roleId": 1,
      "publishState": 3,
      "createTime": 1675504231440,
      "star": 0,
      "view": 0,
      "author": "dingyixxx333",
      "publishTime": 1675600374239,
      "id": 11
    },
    {
      "title": "111111",
      "categoryId": 1,
      "content": "<p>11111</p>\n",
      "roleId": 1,
      "region": "全球",
      "auditState": 2,
      "author": "dingyixxx333",
      "publishState": 2,
      "createTime": 1675504340378,
      "star": 0,
      "view": 0,
      "publishTime": 1675600819835,
      "id": 12
    },
    {
      "title": "222",
      "categoryId": 1,
      "content": "<p></p>\n",
      "roleId": 1,
      "region": "全球",
      "author": "dingyixxx333",
      "auditState": 0,
      "publishState": 0,
      "createTime": 1675504426871,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "id": 13
    },
    {
      "title": "333",
      "categoryId": 1,
      "content": "<p>33333</p>\n",
      "region": "全球",
      "roleId": 1,
      "auditState": 0,
      "author": "dingyixxx333",
      "publishState": 0,
      "createTime": 1675504533838,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "id": 14
    },
    {
      "title": "4444444",
      "categoryId": 2,
      "content": "<p>444444</p>\n",
      "region": "全球",
      "roleId": 1,
      "auditState": 2,
      "author": "dingyixxx333",
      "publishState": 2,
      "createTime": 1675504569860,
      "star": 0,
      "view": 0,
      "publishTime": 1675600853828,
      "id": 15
    },
    {
      "title": "草稿箱",
      "categoryId": 1,
      "content": "<p></p>\n",
      "region": "全球",
      "author": "dingyixxx333",
      "auditState": 0,
      "roleId": 1,
      "publishState": 0,
      "createTime": 1675504594667,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "id": 16
    },
    {
      "title": "新闻列表",
      "categoryId": 1,
      "content": "<p></p>\n",
      "region": "全球",
      "roleId": 1,
      "auditState": 2,
      "author": "dingyixxx333",
      "publishState": 2,
      "createTime": 1675504612343,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "id": 17
    },
    {
      "title": "wewe",
      "categoryId": 1,
      "content": "",
      "region": "全球",
      "auditState": 2,
      "roleId": 1,
      "author": "dingyixxx333",
      "publishState": 2,
      "createTime": 1675504672360,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "id": 18
    },
    {
      "title": "66667",
      "categoryId": 1,
      "content": "",
      "region": "全球",
      "roleId": 1,
      "auditState": 2,
      "author": "dingyixxx333",
      "publishState": 2,
      "createTime": 1675504909702,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "id": 21
    },
    {
      "title": "此时此刻，ChatGPT正在颠覆世界！把谷歌和脸书都馋哭了……",
      "categoryId": 3,
      "content": "<h1 style=\"text-align:start;\"><span style=\"color: rgb(64,64,64);font-size: 38px;font-family: MicrosoftYaHei Bold;\">此时此刻，Chat</span><span style=\"color: rgb(247,218,100);font-size: 38px;font-family: MicrosoftYaHei Bold;\">GPT正在颠</span><span style=\"color: rgb(64,64,64);font-size: 38px;font-family: MicrosoftYaHei Bold;\">覆世界！把谷歌和脸书都馋哭了……</span></h1>\n<p style=\"text-align:start;\"><span style=\"color: rgb(153,153,153);font-size: 14px;\">2023-02-05 00:28:23　来源:</span> <a href=\"https://www.163.com/dy/media/T1604378923561.html\" target=\"_self\"><span style=\"color: rgb(153,153,153);font-size: 14px;\">蒲公英互联</span></a>&nbsp;</p>\n<img src=\"https://static.ws.126.net/163/f2e/dy_media/dy_media/static/images/ipLocation.f6d00eb.svg\" alt=\"\" style=\"height: ;width: \"/>\n<p style=\"text-align:start;\"></p>\n<p style=\"margin-left:-170px;\"></p>\n<p style=\"margin-left:auto;\"><a href=\"https://comment.tie.163.com/HSP8G62G0542QSJ0.html\" target=\"_self\"><span style=\"color: rgb(225,0,0);background-color: rgb(255,255,255);font-size: 24px;font-family: Georgia;\">54</span></a></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(153,153,153);background-color: rgb(255,255,255);font-size: 14px;\">分享至</span></p>\n<ul>\n<li style=\"margin-left:auto;\"></li>\n<li style=\"margin-left:auto;\"></li>\n<li style=\"margin-left:auto;\"></li>\n</ul>\n<p style=\"margin-left:0px;\"></p>\n<ul>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">撰稿 Taola | 排版 Nina | 校对 Az</span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">近日，<strong>AI聊天机器人ChatGPT火爆全网</strong>——由人工智能实验室OpenAI开发一款<strong>人工智能技术驱动的自然语言处理工具。</strong></span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">不仅可以聊天对话，还能在几秒内就能写出人们想要的文字，比如，撰写邮件、视频脚本、文案、翻译、代码等等任务。</span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">现在，美国房产经纪人在用ChatGPT撰写广告，求职者在使用ChatGPT撰写简历，<strong>甚至学生们在使用ChatGPT撰写论文，都能轻轻松松拿个A。</strong></span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">可以说，只要是与文字相关的工作，<strong>ChatGPT给出的答案都近乎完美，令人惊叹。</strong></span></li>\n</ul>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">现在IT 互联网圈的人都在疯狂的体验它，而且都在感慨它的惊奇之处，这东西太厉害了，甚至有人说它是搜索引擎的颠覆者。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\"><strong>很多网友表示，这玩意好用到吓人！</strong></span></p>\n<ol>\n<li></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(61,142,185);font-size: 18px;\"><strong>特此声明：</strong></span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(61,142,185);font-size: 18px;\"><strong>本文非广告、纯分享</strong></span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(61,142,185);font-size: 18px;\"><strong>01</strong></span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(61,142,185);font-size: 18px;\"><strong>OpenAI正全球招募外包大军</strong></span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(61,142,185);font-size: 18px;\">据悉，人工智能实验室OpenAI已经开始加大力度进行全球招聘。</span></li>\n<li style=\"text-align:justify;\"><span style=\"color: rgb(61,142,185);font-size: 18px;\">在过去的6个月中，已经在拉丁美洲和东欧等地区<strong>聘请了约1000个外包团队</strong>，负责创建</span><span style=\"color: rgb(64,64,64);font-size: 18px;\">数据，指导人工智能学习简单的软件编写任务。</span></li>\n</ol>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\"><strong>60%的外包团队被雇用进行「数据标注」工作</strong>——创建大量的图像、音频片段等信息，用来训练人工智能工具或自动驾驶汽车。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\"><strong>另外40%的外包团队是真正的程序员</strong>，他们在为OpenAI的模型创建数据，让AI学习软件工程任务。OpenAI于2021年8月开发的Codex产品，旨在将自然语言翻译成代码。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">数据来源于Semafor.com。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">此前，OpenAI一直在用从GitHub复制的代码进行训练其模型。这一次，<strong>OpenAI想要建立的数据集不仅包括代码，还包括用自然语言编写的人类解释。</strong></span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">一名南美的软件开发人员曾完成了五个小时的OpenAI免费编码测试，他表示，自己被要求处理一系列分两部分的任务。首先，他会得到一个编程问题，OpenAI要求他<strong>用书面的英语解释自己将如何处理这个问题。</strong>然后，他需要提供一个解决方案。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">如果运行过程中他发现了一个bug，OpenAI就会要求他详细说明问题是什么，<strong>应该如何纠正，而不是简单地修复。</strong></span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">“他们可能想给这个模型提供非常特殊的训练数据，在这种情况下，就需要一步步展示人类是如何思考的，”软件员说道。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">此前ChatGPT写出的代码出现过不少问题。原因在于，ChatGPT没有任何标记了对错的内部记录，其实就只是一个统计模型。而ChatGPT的答案，本质上就是从构成GPT-3的互联网数据语料库中收集的概率结果。当时OpenAI也表示，<strong>ChatGPT最合适的定位是编码辅助工具。</strong></span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">如今，如果OpenAI真的教会了ChatGPT可以「像人类一样一步一步思考」，那么意味着它<strong>完全可以代替一些初级代码编译工作。</strong>也就是说，一些初级码农，做简单编程工作的员工将被淘汰。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">随着数百名程序员齐心协力地“教”模型如何编写基本代码，ChatGPT背后的技术可能会走向一种新的软件开发，就像重型设备对建筑行业一样，对该行业具有变革性。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">OpenAI的首席执行官山姆·奥特曼(Sam Altman)最近称，<strong>目前公司的员工人数为375人</strong>，与谷歌和脸书等科技巨头从事人工智能工作的数千名员工相比，这是一个很小的数字。“我知道我不应该吹嘘OpenAI，我们要感谢我们所有的外包公司为训练模型提供了必不可少的数据。”</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\"><strong>02</strong></span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\"><strong>一亮相，亮瞎眼</strong></span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">AI聊天机器人ChatGPT自去年11月首次亮相后，<strong>因其强大的信息整合以及对话能力惊艳了全球，更是在自然语言处理方面更是表现出了惊人的能力。</strong></span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">撰写文章甚至创作诗歌，编写和调试代码等等，<strong>仅仅几秒钟的时间就可以完成人类的工作。</strong>随着人工智能(AI)的推出，人类正在迎来一场令人震惊的技术革命。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">ChatGPT是由人工智能实验室OpenAI开发一款人工智能技术驱动的自然语言处理工具(NLP)。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\"><strong>使用了Transformer神经网络架构，</strong>也是GPT-3.5架构，这是一种用于处理序列数据的模型，<strong>拥有语言理解和文本生成能力，是通过连接大量的语料库来训练模型。</strong></span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">语料库中包含了真实世界中的对话，<strong>使得ChatGPT可以上知天文下知地理，还能根据聊天的上下文进行互动。</strong>也就是说，创作文本时，无需人类自己搜索资料就可以自动生成原创内容。</span></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(64,64,64);font-size: 18px;\">从黑洞知识、到创作性的作首诗，它都可以在几秒内给出答案，几乎没有回答不了的。</span></p>\n",
      "region": "全球",
      "author": "dingyixxx333",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1675508680495,
      "star": 0,
      "view": 0,
      "publishTime": 1675600634318,
      "id": 22
    },
    {
      "title": "不吹牛,完爆ant design的定位组件, floating-ui来也修改",
      "categoryId": 5,
      "content": "<ol>\n<li><span style=\"color: rgb(251,160,38);background-color: rgb(61,142,185);font-size: 30px;\"><strong><em><ins>前言</ins></em></strong></span></li>\n<li><span style=\"color: rgb(251,160,38);background-color: rgb(61,142,185);font-size: 30px;\"><strong><em><ins>因为要写react定位组件（这不是标题党，就是完爆ant design的定位组件，你应该看到一半就会同意我的观点），如下图：</ins></em></strong></span></li>\n<li></li>\n<li></li>\n<li><span style=\"color: rgb(251,160,38);background-color: rgb(61,142,185);font-size: 30px;\"><strong><em><ins>红框部分是用绝对定位放在按钮上面的，你们B端用的主流组件库都是这样实现的，它是很多组件的基础组件，比如下图：</ins></em></strong></span></li>\n<li></li>\n<li><span style=\"color: rgb(251,160,38);background-color: rgb(61,142,185);font-size: 30px;\"><strong><em><ins>下拉框组件</ins></em></strong></span></li>\n<li></li>\n<li></li>\n<li><span style=\"color: rgb(251,160,38);background-color: rgb(61,142,185);font-size: 30px;\"><strong><em><ins>select组件</ins></em></strong></span></li>\n<li></li>\n<li></li>\n<li><span style=\"color: rgb(251,160,38);background-color: rgb(61,142,185);font-size: 30px;\"><strong><em><ins>还有什么DataPicker，TreeSelect，Dropdown组件等等的下拉框都是以定位组件为基础的。</ins></em></strong></span></li>\n</ol>\n<p></p>\n<p>这个组件实现的复杂度在哪</p>\n<p>上面提到，这不过就是一个绝对定位嘛（我们假设红框部分的的dom绝对定位是相较于body元素），我们拿最简单的情况来看，如下图，如何把红框部分渲染到按钮”更多“的下方呢？</p>\n<p></p>\n<p></p>\n<p>我们可以计算更多按钮的getBoundingRect()，返回</p>\n<p></p>\n<p>const reference = {top: xx, // 按钮距离浏览器顶部的距离left: xx， // 按钮距离浏览器左边的距离width: xx， // 按钮的宽：没有paddingheight：xx，// 按钮的高：没有padding...等等其他属性</p>\n<p>}&nbsp;</p>\n<p>1</p>\n<p>2</p>\n<p>所以红框部分左上角的坐标就轻易的计算出来了,上面的数据在reference对象上，所以借助reference的定位，我们计算红框部分的下拉框的定位是在哪</p>\n<p></p>\n<p>{position: 'absolute',top: reference.top + window.pageYOffset // 竖直方向滚动距离 + reference.heightleft: reference.left + window.pageXOffset // 横向滚动距离&nbsp;</p>\n<p>}&nbsp;</p>\n<p>1</p>\n<p>2</p>\n<p>为啥是上面这么计算呢，假如没有滚动条滚动，那么红框部分的绝对定位的top，是不是等于按钮的距离浏览器顶部的高度 + 本身的高度，这个没问题吧？</p>\n<p></p>\n<p>然后，如果滚动条滚动了的话，是不是要在上面top的基础上加上这段距离，就是红框部分在文档流绝对定位的top。</p>\n<p></p>\n<p>好了，到此为止，就是最基本的定位组件的逻辑了，我们接下来看复杂点！</p>\n<p></p>\n<p>复杂度1</p>\n<p>还是拿上面的图的红色部分下拉框来说，下拉框一般是在下面，但是我可以定位到上边吧？左边，右边也没啥吧，再过分点，右上，左下？定位组件要处理对吧</p>\n<p></p>\n<p>复杂度2</p>\n<p>假设，我们定位在下面，我想向左偏移8px，向下偏移3px咋办，你是不是应该有暴露一个口子</p>\n<p></p>\n<p>复杂度3</p>\n<p>假设我定位在下面，那么我一直滚，马上就要滚动到看不见下拉框了，如下图</p>\n<p></p>\n<p></p>\n<p>此时我想让定位在上面，能不能自动帮我处理？如下图：</p>\n<p></p>\n<p></p>\n<p>复杂度4</p>\n<p>是不是还有可能超出浏览器视口了，如下图：</p>\n<p></p>\n<p></p>\n<p>我们想自动处理，遇到超出就自动变为下方样子：</p>\n<p></p>\n<p></p>\n<p>复杂度5</p>\n<p>此时我定位了一次，但是有可能滚动容器不是window，是另一个div，这个计算咋办？还有，是不是我滚动的时候，我要监听滚动事件，还要监听浏览器resize事件，因为我定位的值可能会变？为啥呢，我们上面复杂度3是不是自动帮我们在滚动的时候调整位置</p>\n<p></p>\n<p>所以你不监听滚动事件你咋知道要调整位置了？</p>\n<p></p>\n<p>还有很多细枝末节，比如浏览器兼容性等等。。。。</p>\n<p></p>\n<p>国内组件库怎么实现这个功能</p>\n<p>目前阿里的ant design和字节的arco design都是自己实现的，我们拿arco来看（ant内部叫rc-trriger组件，arco叫trriger组件），面向过程的代码，看的我头皮发麻。。。我截个图：</p>\n<p></p>\n<p></p>\n<p>上面的代码属于把我们提到的复杂度全部揉在了一起。</p>\n<p></p>\n<p>floating-ui为啥代码质量比ant高</p>\n<p>它是以中间件的形式去处理的，思路是什么呢？它假设最开始有一个 computePosition函数，我们假设上面提到的复杂度都没有，也就是不考虑的前提下，我们怎么计算定位组件的坐标，也就是我们最前面的图里说的，红色框部分绝对定位的的的top值和left值：</p>\n<p></p>\n<p>API如下：</p>\n<p></p>\n<p>computePosition(要挂载的dom节点，下拉框组件，参数...)&nbsp;</p>\n<p>1</p>\n<p>然后我们刚才提到的复杂度，它分别用中间件的形式去处理，比如复杂度2，是想定位之后还有点偏移量，floating-ui咋做的呢</p>\n<p></p>\n<p>import {computePosition, offset} from '@floating-ui/dom';</p>\n<p></p>\n<p>// referenceEl： 要挂载的dom节点</p>\n<p>// floatingEl：下拉框组件（或者说想要挂载到上面referenceEl的dom元素）</p>\n<p>computePosition(referenceEl, floatingEl, {middleware: [offset(10)],</p>\n<p>});&nbsp;</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n<p>6</p>\n<p>如上，offset就是一个中间件，offset(10)，就是向左偏移10px</p>\n<p></p>\n<p>好了，如果想处理复杂度3呢，我们用另一个中间件</p>\n<p></p>\n<p>import {computePosition, flip} from '@floating-ui/dom';</p>\n<p>&nbsp;</p>\n<p>computePosition(referenceEl, floatingEl, {middleware: [flip()],</p>\n<p>});&nbsp;</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>这样就自动处理了，是不是很简单啊</p>\n<p></p>\n<p>其实所有这些复杂度的解决方案，在floating-ui里都是以中间件的形式去处理的，还可以传多个中间件解决多个问题。</p>\n<p></p>\n<p>中间件的形式好在哪</p>\n<p>那么我们就可以自定义很多中间件了，也就是你的组件不仅仅提供了很多功能，解决了很多常用的问题，你还允许用户写代码去拓展，试问，现在哪个组件库的代码是这么写的？没有吧？</p>\n<p></p>\n<p>代码中间件原理</p>\n<p>我们先看看floating-ui的computePosition API是怎么实现的，它是floating-ui的核心方法，是串联所有中间件的基础。</p>\n<p></p>\n<p>下一篇写完整的源码（很晦涩，估计也没几个人看，所以这期就不写了），理解起来说实话，你不熟悉原生dom的话有点困难，比如说为啥这个库要用window.pageYoffset而不是document.body.scrollTop去获取浏览器html元素的滚动距离，因为document.body.scrollTop固定为0，取不到。。。</p>\n<p></p>\n<p>核心思路讲解：我们还是拿下图做类比</p>\n<p></p>\n<p></p>\n<p>let {x, y} = 求出红色框里的下拉框绝对定位的x坐标和y坐标</p>\n<p></p>\n<p>// 记录原始placementlet statefulPlacement = placement;// 所有中间件导出的值都挂载到下面的对象上let middlewareData: MiddlewareData = {};// 数据经过middleware的处理// middleware是一个数组，存放所有中间件，就是我们上面说的处理每一个复杂度的对象for (let i = 0; i &lt; middleware.length; i++) { // name是中间件的名字，fn是处理复杂度的逻辑const {name, fn} = middleware[i];   // 通过把最前面计算的x，y经过fn的处理，得到了新的x,y的值 // data是指返回的数据，想让后面的中间件也能访问到的数据/** * 每个middleware需要返回 * x 新的x坐标 * y 新的y坐标 * data  * reset */const {x: nextX,y: nextY,data,reset,} = await fn({/** * 每个middleware收到的参数 * x 目前的x坐标 * y 目前的y坐标 * initialPlacement 最初传入的placement * placement  * middlewareData middleware返回的额外数据 */x,y,initialPlacement: placement,placement: statefulPlacement,strategy,middlewareData,rects,platform,elements: {reference, floating},});x = nextX ?? x;y = nextY ?? y;// 每次处理后的数据想要让后面的中间件访问，就需要挂载到middlewareData对象// 这个对象非常好啊，用name隔离了作用域middlewareData = {...middlewareData,[name]: {...middlewareData[name],...data,},}; rest的处理逻辑。。。省略，不是很重要&nbsp;</p>\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>最后return出被处理完的x,y坐标，或者自动帮我们监听滚动事件和resize事件，然后拿着x,y就可以赋在css的绝对定位的top和left上，实现了定位。</p>\n<p></p>\n<p>每次处理后的数据想要让后面的中间件访问，就需要挂载到middlewareData对象，这个对象非常好啊，用name隔离了作用域，这就是比koa这个框架处理的高明之处，koa里的ctx对象就像一个垃圾桶，什么属性都往上面挂载，挂载太多了，你也不知道是哪个中间件挂载的</p>\n<p></p>\n<p>所以floating-ui的处理思路给我打开了新的思路！nice！！！</p>\n<p></p>\n<p>中间件如何写</p>\n<p>源码再开一篇文章写，这里看看就好，不用过多去关系代码</p>\n<p></p>\n<p>export const offset = (value: Options = 0): Middleware =&gt; ({name: 'offset', // 中间件名字options: value,// 传给中间件的值async fn(middlewareArguments) { // 中间件处理函数const {x, y} = middlewareArguments;const diffCoords = await convertValueToCoords(middlewareArguments, value);return {x: x + diffCoords.x,y: y + diffCoords.y,data: diffCoords,};},</p>\n<p>});&nbsp;</p>\n<p>1</p>\n<p>2</p>\n<p>本文结束，所以如果市面上的组件库的每个组件都是这个形式暴露给用户，就是提供插件式的自定义的中间件，那么整个组件库的拓展性可以说碾压市面上国内所有的react的组件库了</p>\n<p>————————————————</p>\n<p>版权声明：本文为CSDN博主「前端码农小王」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</p>\n<p>原文链接：https://blog.csdn.net/qq_53225741/article/details/128818336</p>\n",
      "region": "全球",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1675513382673,
      "star": 0,
      "view": 0,
      "publishTime": 1675593607577,
      "author": "dingyixxx333",
      "id": 23
    },
    {
      "title": "ewew",
      "categoryId": 2,
      "content": "<p></p>\n<ol>\n<li>root<br>所监听对象的具体祖<span style=\"font-size: 30px;\"><em><ins>先元素。如果未传入值或</ins></em></span>值为<code>null</code>，则默认使用顶级文档的视窗(一般为html)。<br><br><br>rootMargin<br>计算交叉时添加到<strong>根(root)边界盒</strong><a href=\"https://link.juejin.cn?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FGlossary%2Fbounding_box\" target=\"_blank\"><strong>bounding box</strong></a><strong>的矩形偏移量， 可以有效的缩小或扩大根的判定范围从而满足计算需要。所有的偏移量均可用像素</strong>(<code>px</code>)或<strong>百分比</strong>(<code>%</code>)来表达, 默认值为\"0px 0px 0px 0px\"。<br><br><br>threshold<br>一个包含阈值的列表, 按升序排<span style=\"color: rgb(235,107,86);\">列, 列表中的每个阈值都是监听对象的交叉</span>区域与边界区域的比率。当监听对象的任何阈值被越过时，都会触发callback。默认值为0。<br></li>\n</ol>\n<p>作者：Va007<br>链接：https://juejin.cn/post/6844903874302574599<br>来源：稀土掘金<br>著作权归作者所有。商业转载请联系作者获得授权😠，非商业转载请注明出处。</p>\n",
      "region": "全球",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1675526201167,
      "star": 0,
      "view": 0,
      "publishTime": 1675600595261,
      "author": "dingyixxx333",
      "id": 24
    },
    {
      "title": "来自中国的流浪气球从1到3在美国上空成连续剧了",
      "categoryId": 4,
      "content": "<h1 style=\"text-align:start;\"><span style=\"color: rgb(64,64,64);font-size: 38px;font-family: MicrosoftYaHei Bold;\">来自中国的流浪气球从1到3在美国上空成连续剧了</span></h1>\n<p style=\"text-align:start;\"><span style=\"color: rgb(153,153,153);font-size: 14px;\">2023-02-05 11:32:38　来源:</span> <a href=\"https://www.163.com/dy/media/T1655298301234.html\" target=\"_self\"><span style=\"color: rgb(153,153,153);font-size: 14px;\">满小轩</span></a>&nbsp;</p>\n<img src=\"https://static.ws.126.net/163/f2e/dy_media/dy_media/static/images/ipLocation.f6d00eb.svg\" alt=\"\" style=\"height: ;width: \"/>\n<p style=\"text-align:start;\"></p>\n<p style=\"margin-left:-170px;\"></p>\n<p style=\"margin-left:auto;\"><a href=\"https://comment.tie.163.com/HSQEGCTK0553CPCS.html\" target=\"_self\"><span style=\"color: rgb(225,0,0);background-color: rgb(255,255,255);font-size: 24px;font-family: Georgia;\">0</span></a></p>\n<p style=\"margin-left:0px;\"><span style=\"color: rgb(153,153,153);background-color: rgb(255,255,255);font-size: 14px;\">分享至</span></p>\n<ul>\n<li style=\"margin-left:auto;\"></li>\n<li style=\"margin-left:auto;\"></li>\n<li style=\"margin-left:auto;\"></li>\n</ul>\n<p style=\"margin-left:0px;\"></p>\n<p style=\"text-align:justify;\"><span style=\"color: rgb(41,105,176);font-size: 30px;\">咱们先来捋一捋，从中国的流浪气球1到中国的流浪气球3。美国官方称目前发现了两个，但美国媒体声称加勒比海上还有一个，目前一共有三个。</span></p>\n",
      "region": "全球",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1675578330911,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "dingyixxx333",
      "id": 26
    },
    {
      "title": "轩辕翠花写的第一篇新闻",
      "categoryId": 1,
      "content": "<p>轩辕翠花写的第一篇新闻</p>\n",
      "region": "南极洲",
      "roleId": 3,
      "auditState": 2,
      "publishState": 1,
      "createTime": 1675586670191,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "轩辕翠花",
      "id": 27
    },
    {
      "title": "轩辕翠花写的第二篇新闻",
      "categoryId": 3,
      "content": "<p>轩辕翠花写的第二篇新闻</p>\n",
      "region": "南极洲",
      "roleId": 3,
      "auditState": 3,
      "publishState": 0,
      "createTime": 1675586708376,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "轩辕翠花",
      "id": 28
    },
    {
      "title": "轩辕翠花写的第三篇新闻",
      "categoryId": 4,
      "content": "<p>轩辕翠花写的第三篇新闻</p>\n",
      "region": "南极洲",
      "roleId": 3,
      "auditState": 2,
      "publishState": 1,
      "createTime": 1675586723951,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "轩辕翠花",
      "id": 29
    },
    {
      "title": "西门吹灯的第一篇大作",
      "categoryId": 4,
      "content": "<p>西门吹灯的第一篇大作</p>\n",
      "region": "南极洲",
      "roleId": 3,
      "auditState": 2,
      "publishState": 1,
      "createTime": 1675586755175,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "西门吹灯",
      "id": 30
    },
    {
      "title": "西门吹灯的第二篇大作",
      "categoryId": 2,
      "content": "<p>西门吹灯的第一篇大作</p>\n",
      "region": "南极洲",
      "roleId": 3,
      "auditState": 2,
      "publishState": 1,
      "createTime": 1675586768126,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "西门吹灯",
      "id": 31
    },
    {
      "title": "西门吹灯的第三篇大作",
      "categoryId": 5,
      "content": "<p>西门吹灯的第三篇大作</p>\n",
      "region": "南极洲",
      "roleId": 3,
      "auditState": 3,
      "publishState": 0,
      "createTime": 1675586781897,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "西门吹灯",
      "id": 32
    },
    {
      "title": "钢蛋打油诗01",
      "categoryId": 1,
      "content": "<p>钢蛋打油诗01</p>\n",
      "region": "南极洲",
      "roleId": 2,
      "auditState": 2,
      "publishState": 1,
      "createTime": 1675586826908,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "钢蛋",
      "id": 33
    },
    {
      "title": "钢蛋打油诗02",
      "categoryId": 4,
      "content": "<p>钢蛋打油诗02</p>\n",
      "region": "南极洲",
      "roleId": 2,
      "auditState": 3,
      "publishState": 0,
      "createTime": 1675586839440,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "钢蛋",
      "id": 34
    },
    {
      "title": "dingyi区域管理员自己写的",
      "categoryId": 4,
      "content": "<p>dingyi区域管理员自己写的</p>\n",
      "region": "南极洲",
      "roleId": 2,
      "auditState": 2,
      "publishState": 1,
      "createTime": 1675587166764,
      "star": 0,
      "view": 0,
      "publishTime": 0,
      "author": "dingyi",
      "id": 35
    },
    {
      "title": "45454545",
      "categoryId": 1,
      "content": "",
      "region": "全球",
      "roleId": 1,
      "auditState": 2,
      "publishState": 2,
      "createTime": 1675600673801,
      "star": 0,
      "view": 0,
      "publishTime": 1675600679579,
      "author": "dingyixxx333",
      "id": 36
    }
  ]
}